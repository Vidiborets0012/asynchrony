{"version":3,"file":"promises.js","sources":["../src/js/promises.js"],"sourcesContent":["// Проміси\n\n//Життєвий цикл проміса\n\n//Створення проміса\n\n/*\nconst promise = new Promise((resolve, reject) => {\n  // Asynchronous operation\n});\n\n*/\n\nconst isSuccess = true;\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (isSuccess) {\n      resolve('Success! Value passed to resolve function');\n    } else {\n      reject('Error! Error passed to reject function');\n    }\n  }, 2000);\n});\n\nconsole.log(promise); // Об'єкт промісу\n\n//Метод then()\n\n/*\npromise.then(onResolve, onReject)\n*/\n// Registering promise callbacks\n\n/*\npromise.then(\n  value => {\n    console.log(value); // \"Success! Value passed to resolve function\"\n  },\n  error => {\n    console.log(error); // \"Error! Error passed to reject function\"\n  }\n);\n*/\n\n// Метод catch()\n\n/*\npromise\n\t.then(value => {\n\t\t// Promise fulfilled\n\t})\n\t.catch(error => {\n\t  // Promise rejected\n\t});\n\n*/\n\n// Registering promise callbacks\n/*\npromise\n  .then(value => {\n    console.log(value); // \"Success! Value passed to resolve function\"\n  })\n  .catch(error => {\n    console.log(error); // \"Error! Error passed to reject function\"\n  });\n  */\n\n//Метод finally()\n\n/*\npromise\n\t.then(value => {\n\t  // Promise fulfilled\n\t})\n\t.catch(error => {\n\t  // Promise rejected\n\t})\n\t.finally(() => {\n\t  // Promise fulfilled or rejected\n\t});\n\n*/\n\n// Registering promise callbacks\npromise\n  .then(value => console.log(value)) // \"Success! Value passed to resolve function\"\n  .catch(error => console.log(error)) // \"Error! Error passed to reject function\"\n  .finally(() => console.log('Promise settled')); // \"Promise settled\"\n\n//Ланцюжки промісів\n\nconst promise1 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    resolve(5);\n  }, 2000);\n});\n\npromise1\n  .then(value => {\n    console.log(value); // 5\n    return value * 2;\n  })\n  .then(value => {\n    console.log(value); // 10\n    return value * 3;\n  })\n  .then(value => {\n    console.log(value); // 30\n  })\n  .catch(error => {\n    console.log(error);\n  })\n  .finally(() => {\n    console.log('finally');\n  });\n"],"names":["promise","resolve","reject","value","error","promise1"],"mappings":"oDAeA,MAAMA,EAAU,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CAEbD,EAAQ,2CAA2C,CAItD,EAAE,GAAI,CACT,CAAC,EAED,QAAQ,IAAID,CAAO,EA6DnBA,EACG,KAAKG,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAChC,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACjC,QAAQ,IAAM,QAAQ,IAAI,iBAAiB,CAAC,EAI/C,MAAMC,EAAW,IAAI,QAAQ,CAACJ,EAASC,IAAW,CAChD,WAAW,IAAM,CACfD,EAAQ,CAAC,CACV,EAAE,GAAI,CACT,CAAC,EAEDI,EACG,KAAKF,IACJ,QAAQ,IAAIA,CAAK,EACVA,EAAQ,EAChB,EACA,KAAKA,IACJ,QAAQ,IAAIA,CAAK,EACVA,EAAQ,EAChB,EACA,KAAKA,GAAS,CACb,QAAQ,IAAIA,CAAK,CACrB,CAAG,EACA,MAAMC,GAAS,CACd,QAAQ,IAAIA,CAAK,CACrB,CAAG,EACA,QAAQ,IAAM,CACb,QAAQ,IAAI,SAAS,CACzB,CAAG"}